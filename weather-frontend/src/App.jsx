import React, { useState, useEffect } from 'react'

const WEATHER_API = '/api/weather'

function App() {
  const [city, setCity] = useState('Moscow')
  const [country, setCountry] = useState('ru')
  const [weatherData, setWeatherData] = useState(null)
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const [user, setUser] = useState(null)

  useEffect(() => {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (–ø–æ—Å–ª–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ —Å auth)
    const urlParams = new URLSearchParams(window.location.search)
    const urlUser = urlParams.get('user')
    
    if (urlUser) {
      setUser(urlUser)
      localStorage.setItem('username', urlUser)
      loadWeather() // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É
    } else {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
      const savedUser = localStorage.getItem('username')
      if (savedUser) {
        setUser(savedUser)
        loadWeather()
      } else {
        // –ï—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ auth
        window.location.href = 'http://localhost:3001'
      }
    }
  }, [])

  const loadWeather = async () => {
    setLoading(true)
    setError('')
    
    try {
      const response = await fetch(`${WEATHER_API}/${city},${country}`)
      
      if (!response.ok) {
        const errorData = await response.json()
        throw new Error(errorData.error || `HTTP error! status: ${response.status}`)
      }
      
      const data = await response.json()
      setWeatherData(data)
    } catch (err) {
      setError(`–û—à–∏–±–∫–∞: ${err.message}`)
    } finally {
      setLoading(false)
    }
  }

  const logout = () => {
    localStorage.removeItem('username')
    window.location.href = 'http://localhost:3001'
  }

  if (!user) {
    return <div className="loading">–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...</div>
  }

  return (
    <div className="container">
      <div className="header">
        <h1>üå§Ô∏è –ü–æ–≥–æ–¥–∞</h1>
        <div className="user-info">
          <span>–ü—Ä–∏–≤–µ—Ç, {user}!</span>
          <button onClick={logout} className="logout-btn">–í—ã–π—Ç–∏</button>
        </div>
      </div>

      <div className="weather-controls">
        <input
          type="text"
          value={city}
          onChange={(e) => setCity(e.target.value)}
          placeholder="–ì–æ—Ä–æ–¥"
        />
        <input
          type="text"
          value={country}
          onChange={(e) => setCountry(e.target.value)}
          placeholder="–ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã (ru, us, it)"
          maxLength="2"
        />
        <button onClick={loadWeather} disabled={loading}>
          {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É'}
        </button>
      </div>

      {error && <div className="error">{error}</div>}

      {weatherData && (
        <div className="weather-card ">
          <h2>{weatherData.city}, {weatherData.country}</h2>
          <div className="weather-main">
            <div className="temperature increase">
              {weatherData.temperature}¬∞C
            </div>
            <div className="description ">
              {weatherData.description}
            </div>
          </div>
          <div className="weather-details">
            <div className="detail increase">
              <span>üíß–¢–≤–æ—è –í–ª–∞–∂–Ω–æ—Å—Ç—åüòâ</span>
              <span>{weatherData.humidity}%</span>
            </div>
            <div className="detail increase">
              <span>üí® –í–µ—Ç–µ—Ä</span>
              <span>{weatherData.windSpeed} –º/—Å</span>
            </div>
            <div className="detail increase">
              <span>üéØ –î–∞–≤–ª–µ–Ω–∏–µ</span>
              <span>{weatherData.pressure} hPa</span>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default App