name: Build and Deploy Weather App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: authdb
          POSTGRES_USER: authuser
          POSTGRES_PASSWORD: Nariman111
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Test Backends
      run: |
        cd auth-backend && mvn test
        cd ../weather-backend && mvn test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin docker.io
    
    - name: Build and push Docker images
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
      run: |
        # Сборка каждого образа отдельно
        docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-backend:latest ./auth-backend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/weather-backend:latest ./weather-backend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-frontend:latest ./auth-frontend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/weather-frontend:latest ./weather-frontend
        
        # Пуш
        docker push ${{ secrets.DOCKER_USERNAME }}/auth-backend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/weather-backend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/auth-frontend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/weather-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"